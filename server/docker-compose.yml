version: '3'
services:
  database:
    # Official Postgres image from DockerHub (we use the last version)
    image: 'postgres:latest' # might need to match AWS

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d -q $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always

    # By default, a Postgres database is running on the 5432 port.
    # If we want to access the database from our computer (outside the container),
    # we must share the port with our computer's port.
    # The syntax is [port we want on our machine]:[port we want to retrieve in the container]
    # Note: You are free to change your computer's port,
    # but take into consideration that it will change the way
    # you are connecting to your database.
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=secret
      - POSTGRES_USER=main_user
      - POSTGRES_DB=fubar_app
    # The `volumes` tag allows us to share a folder with our container.
    # Its syntax is as follows: [folder path on our machine]:[folder path to retrieve in the container]
    volumes:
      # In this example, we share the folder `db-data` in our root repository, with the default PostgreSQL data path.
      # It means that every time the repository is modifying the data inside
      # of `/var/lib/postgresql/data/`, automatically the change will appear in `db-data`.
      # You don't need to create the `db-data` folder. Docker Compose will do it for you.
      - ./db:/docker-entrypoint-initdb.d/
      - ./data_model/:/data_model/